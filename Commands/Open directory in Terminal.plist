<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU
require ENV['TM_SUPPORT_PATH'] + '/lib/escape.rb'

def find_directory
  files = [ ENV['TM_SELECTED_FILE'], ENV['TM_FILEPATH'], ENV['TM_DIRECTORY'], ENV['TM_PROJECT_DIRECTORY'], ENV['HOME'] ]
  res = files.find { |file| file &amp;&amp; File.exists?(file) }
  res &amp;&amp; File.file?(res) ? File.split(res).first : res
end

def is_running(process)
  all = `ps -U "$USER" -o ucomm`
  Array(all).find { |cmd| process == cmd.strip }
end

def terminal_script(dir)
  return &lt;&lt;-APPLESCRIPT
    tell application "Terminal"
      activate
      do script "cd #{e_as(e_sh(dir))}; clear; pwd"
    end tell
APPLESCRIPT
end

def iterm_script(dir)
  return &lt;&lt;-APPLESCRIPT
    tell application "iTerm"
      activate
      if exists the first terminal then
        set myterm to the first terminal
      else
        set myterm to (make new terminal)
      end if
      tell myterm
        activate current session
        launch session "Default Session"
        tell the last session
          write text "cd #{e_as(e_sh(dir))}; clear; pwd"
        end tell
      end tell
    end tell
APPLESCRIPT
end

if dir = find_directory
  script = nil
  if ENV['TM_TERMINAL'] =~ /^iterm$/i || is_running('iTerm')
    script = iterm_script(dir)
  else
    script = terminal_script(dir)
  end
  open("|osascript", "w") { |io| io &lt;&lt; script }
end
</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>^O</string>
	<key>name</key>
	<string>Open Terminal</string>
	<key>output</key>
	<string>discard</string>
	<key>uuid</key>
	<string>54CDB56E-85EA-11D9-B369-000A95E13C98</string>
</dict>
</plist>
